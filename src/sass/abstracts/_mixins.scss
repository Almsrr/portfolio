@use "variables" as *;

@mixin theme($background-color: $dark, $text-color: $light) {
  background-color: $background-color;
  color: $text-color;
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin container() {
  padding: 0 1rem;
  margin: 0 auto;
  width: 100%;

  @include respond-to("md") {
    width: 87%;
  }

  @include respond-to("lg") {
    width: 85%;
  }

  @include respond-to("xl") {
    width: 1300px;
  }
}

@mixin transition($params) {
  -webkit-transition: $params;
  -moz-transition: $params;
  -khtml-transition: $params;
  -o-transition: $params;
  transition: $params;
}

@mixin scale($params) {
  -webkit-transform: scale($params);
  -moz-transform: scale($params);
  -khtml-transform: scale($params);
  -o-transform: scale($params);
  transform: scale($params);
}

@mixin box-shadow($params) {
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  -khtml-box-shadow: $params;
  -o-box-shadow: $params;
  box-shadow: $params;
}

@mixin rotate($params) {
  -webkit-transform: rotate($params);
  -moz-transform: rotate($params);
  -khtml-transform: rotate($params);
  -o-transform: rotate($params);
  transform: rotate($params);
}

@mixin opacity($params) {
  -webkit-opacity: $opacity;
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  -o-opacity: $opacity;
  opacity: $opacity;
}

@mixin border-radius($params) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -khtml-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}
